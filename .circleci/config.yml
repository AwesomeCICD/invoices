version: 2.1
jobs:
  grpc_protocol:
    docker:
      - image: externalreality/invoices-build-image
    steps:
      - checkout

      - run:
          name: Build GPRC Protobuf Protocols
          command: cargo build -p grpc_protocol
      - persist_to_workspace:
          root: ./grpc_protocol
          paths:
            - src
      - gen-cache-key-vars
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}

  analysis_server:
    docker:
      - image: externalreality/invoices-build-image
    steps:
      - build-service:
          display_name: Analysis Server
          package_name: analsysis_server

  invoice_server:
    docker:
      - image: externalreality/invoices-build-image
    steps:
      - build-service:
          display_name: Invoice Server
          package_name: invoice_server

workflows:
  version: 2.1
  build:
    jobs:
      - grpc_protocol
      - analysis_server:
          requires:
            - grpc_protocol
      - invoice_server:
          requires:
            - grpc_protocol

commands:
  gen-cache-key-vars:
    description: "Generate dependency key variables"
    steps:
      - run:
          name: Calculate Cache Key Vars
          command: rustc --version >rust-version

  build-service:
    description: "Boilerplate Rust service build config"
    parameters:
      display_name:
        type: string
      package_name:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./grpc_protocol
      - gen-cache-key-vars
      - restore_cache:
          keys:
            - v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}
      - run:
          name: Build << parameters.display_name >>
          command: cargo build -p << parameters.package_name >>
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}
